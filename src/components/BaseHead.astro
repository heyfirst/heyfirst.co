---
import { siteConfig } from "@/site.config";
import type { SiteMeta } from "@/types";
import "@/styles/global.css";

type Props = SiteMeta;

const { articleDate, description, ogImage, title } = Astro.props;

const titleSeparator = "â€¢";
const siteTitle = `${title} ${titleSeparator} ${siteConfig.title}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(ogImage ? ogImage : "/social-card.png", Astro.url).href;
const isArticle = articleDate && Astro.url.pathname.startsWith('/posts/');
---

<meta charset="utf-8" />
<meta content="width=device-width, initial-scale=1.0" name="viewport" />
<title>{siteTitle}</title>

{/* Theme color */}
<meta name="theme-color" content="#000000" media="(prefers-color-scheme: light)" />
<meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: dark)" />

{/* Icons */}
<link href="/icon.svg" rel="icon" type="image/svg+xml" />
{
	import.meta.env.PROD && (
		<>
			{/* Favicon & Apple Icon */}
			<link rel="icon" href="/favicon-32x32.png" type="image/png" />
			<link href="/icons/apple-touch-icon.png" rel="apple-touch-icon" />
			{/* Manifest */}
			<link href="/manifest.webmanifest" rel="manifest" />
		</>
	)
}

{/* Canonical URL */}
<link href={canonicalURL} rel="canonical" />

{/* Primary Meta Tags */}
<meta content={siteTitle} name="title" />
<meta content={description} name="description" />
<meta content={siteConfig.author} name="author" />

{/* Open Graph / Facebook */}
<meta content={isArticle ? "article" : "website"} property="og:type" />
<meta content={title} property="og:title" />
<meta content={description} property="og:description" />
<meta content={canonicalURL} property="og:url" />
<meta content={siteConfig.title} property="og:site_name" />
<meta content={siteConfig.ogLocale} property="og:locale" />
<meta content={socialImageURL} property="og:image" />
<meta content="1200" property="og:image:width" />
<meta content="630" property="og:image:height" />
<meta content={title} property="og:image:alt" />
{
	articleDate && (
		<>
			<meta content={siteConfig.author} property="article:author" />
			<meta content={articleDate} property="article:published_time" />
		</>
	)
}

{/* Twitter */}
<meta content="summary_large_image" property="twitter:card" />
<meta content={canonicalURL} property="twitter:url" />
<meta content={title} property="twitter:title" />
<meta content={description} property="twitter:description" />
<meta content={socialImageURL} property="twitter:image" />
<meta content={siteConfig.title} property="twitter:site" />
<meta content={siteConfig.author} property="twitter:creator" />

{/* Sitemap */}
<link href="/sitemap-index.xml" rel="sitemap" />

{/* RSS auto-discovery */}
<link href="/rss.xml" title="Blog" rel="alternate" type="application/rss+xml" />
<!-- TODO(note): Add notes RSS feed once I have some notes -->
<!-- <link href="/notes/rss.xml" title="Notes" rel="alternate" type="application/rss+xml" /> -->

<meta content={Astro.generator} name="generator" />

{/* JSON-LD Structured Data */}
<script type="application/ld+json" set:html={JSON.stringify({
	"@context": "https://schema.org",
	"@type": "WebSite",
	"name": siteConfig.title,
	"url": siteConfig.url,
	"description": siteConfig.description,
	"author": {
		"@type": "Person",
		"name": siteConfig.author,
		"url": siteConfig.url
	},
	"publisher": {
		"@type": "Person",
		"name": siteConfig.author
	}
})} />

{isArticle && articleDate && (
	<script type="application/ld+json" set:html={JSON.stringify({
		"@context": "https://schema.org",
		"@type": "BlogPosting",
		"headline": title,
		"description": description,
		"author": {
			"@type": "Person",
			"name": siteConfig.author,
			"url": siteConfig.url
		},
		"publisher": {
			"@type": "Person",
			"name": siteConfig.author
		},
		"datePublished": articleDate,
		"dateModified": articleDate,
		"mainEntityOfPage": {
			"@type": "WebPage",
			"@id": canonicalURL
		},
		"image": {
			"@type": "ImageObject",
			"url": socialImageURL,
			"width": 1200,
			"height": 630
		}
	})} />
)}
